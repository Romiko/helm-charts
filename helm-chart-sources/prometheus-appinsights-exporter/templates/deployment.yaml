apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-appinsights-exporter.fullname" . }}
  labels:
{{ include "prometheus-appinsights-exporter.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-appinsights-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-appinsights-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
{{- if .Values.environmentFromSecret }}
          envFrom:
          - secretRef:
              name: {{ .Values.environmentFromSecret }}
{{- end }}
{{- if .Values.environment }}
          env:
  {{- range .Values.environment }}
          - name: {{ .name }}
      {{- if .valueFromSecret }}
            valueFrom:
              secretKeyRef:
                key: {{ .valueFromSecret }}
                name: {{ $.Release.Name }}-secret
      {{- else }}
            value: {{ .value | quote }}
      {{- end }}
  {{- end }}
{{- end}}
          volumeMounts:
          - name: config-volume
            mountPath: /config/
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-configmap


